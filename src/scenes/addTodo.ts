import { nanoid } from "nanoid";
import { Markup, Scenes } from "telegraf";
import { message } from "telegraf/filters";
import { IBotContext } from "../context/context.interface";

const addTodoScene = new Scenes.BaseScene<IBotContext>("addTodo");

addTodoScene.enter((ctx) =>
    ctx.reply("–Ω–∞–ø–∏—à–∏ –∑–∞–¥–∞—á—É: ", Markup.keyboard(["–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå"]))
);

addTodoScene.hears("–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå", (ctx) => {
    return ctx.scene.enter("start");
});

addTodoScene.hears("–î–æ–±–∞–≤–∏—Ç—å ‚úÖ", (ctx) => {
    const todo = ctx.scene.state.currentTodo;

    if (todo) {
        ctx.session.todoList = [
            ...(ctx.session.todoList || []),
            {
                id: nanoid(),
                value: todo,
                isDone: false,
            },
        ];
    } else {
        ctx.reply("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
    }

    return ctx.scene.enter("start");
});

addTodoScene.hears("–ò–∑–º–µ–Ω–∏—Ç—å üî©", (ctx) => {
    return ctx.scene.reenter();
});

addTodoScene.on(message("text"), (ctx) => {
    ctx.scene.state.currentTodo = ctx.message.text;

    return ctx.sendMessage(
        "–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –¥–∞–ª—å—à–µ —Å–¥–µ–ª–∞—Ç—å?",
        Markup.keyboard([["–î–æ–±–∞–≤–∏—Ç—å ‚úÖ", "–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå"], ["–ò–∑–º–µ–Ω–∏—Ç—å üî©"]])
    );
});

export { addTodoScene };
